{"version":3,"sources":["global/ArnoldRegular.woff","assets/images/github-logo.png","assets/images/github.png","global/globalStyle.js","components/SearchInput.js","components/User.js","components/UsersList.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalFonts","createGlobalStyle","_templateObject","Object","taggedTemplateLiteral","Arnold","Form","styled","form","SearchInput_templateObject","FormInput","input","_templateObject2","FormLabel","label","_templateObject3","SearchInput","props","handleInputChange","onSubmitHandler","inputValue","react_default","a","createElement","onSubmit","type","onChange","e","value","UserBox","div","User_templateObject","UserAvatar","img","User_templateObject2","UserLink","User_templateObject3","User","user","src","avatar_url","alt","className","href","html_url","login","List","UsersList_templateObject","BackgroundSrc","UsersList","users","ListItem","map","components_User","key","id","Application","App_templateObject","HeaderImage","App_templateObject2","FooterLink","span","App_templateObject3","App","_useState","useState","_useState2","slicedToArray","setInputValue","_useState3","_useState4","setUsers","Fragment","globalStyle","LogoSrc","components_SearchInput","preventDefault","url","concat","fetch","then","response","json","responseJson","items","target","components_UsersList","createRoot","document","querySelector","render","components_App"],"mappings":"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","file":"static/js/main.0d400e69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ArnoldRegular.b84224ac.woff\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.d303e90e.png\";","module.exports = __webpack_public_path__ + \"static/media/github.08c03c6a.png\";","import { createGlobalStyle } from 'styled-components';\n\nimport Arnold from './ArnoldRegular.woff';\n\nconst GlobalFonts = createGlobalStyle`\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n\tbody {\n\t\tmargin: 0 auto;\n\t}\n\t@font-face {\n\t\tfont-family: 'Arnold';\n\t\tsrc: local('Arnold'), url(${Arnold}) format('woff');\n\t\tfont-weight: 600;\n\t\tfont-style: normal;\n  }\n`;\n\nexport default GlobalFonts","import React from 'react'\nimport styled from 'styled-components'\n\nconst Form = styled.form`\n  text-align: center;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FormInput = styled.input`\n\tmargin: 15px;\n  height: 35px;\n  width: 250px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px $black;\n`;\n\nconst FormLabel = styled.label`\n\tfont-size: 25px;\n  font-weight: 900;\n`;\n\nconst SearchInput = (props) => {\n\n  const {handleInputChange, onSubmitHandler, inputValue} = props;\n\n  return (\n    <Form onSubmit={onSubmitHandler}>\n      <FormLabel>Search user by name</FormLabel>\n      <FormInput\n        type=\"text\"\n        onChange={e => handleInputChange(e)}\n        value={inputValue}\n      />\n    </Form>\n  )\n}\n\nexport default SearchInput","import React from 'react'\nimport styled from 'styled-components'\n\nconst UserBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(128, 128, 128, 0.6);\n  box-shadow: 0 0 15px black;\n`;\n\nconst UserAvatar = styled.img`\n  margin: 5px auto;\n  border-radius: 50%;\n\tmax-width: 100px;\n`;\n\nconst UserLink = styled.a`\n  text-decoration: none;\n  color: black;\n  font-weight: 900;\n`\n\nconst User = (props) => {\n  const {user} = props\n  return (\n    <UserBox>\n      <UserAvatar src={user.avatar_url} alt=\"\" className=\"userAvatar\" />\n      <UserLink href={user.html_url} className=\"userLink\">{user.login}</UserLink>\n    </UserBox>\n  )\n}\n\nexport default User","import React from 'react'\nimport styled from 'styled-components'\nimport BackgroundSrc from '../assets/images/github.png'\nimport User from './User'\n\nconst List = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto auto auto auto;\n  grid-gap: 20px;\n  margin: auto;\n  padding: 15px;\n  background-image: url(${BackgroundSrc});\n  background-repeat: none;\n  background-size: contain;\n  background-position: center;\n  height: 100vh;\n\twidth: 100%;\n  `\n\nconst UsersList = (props) => {\n  const {users} = props\n\n  const ListItem = users.map(user => <User key={user.id} user={user} />)\n\n  return (\n    <List>\n      { users &&\n        ListItem\n      }\n    </List>\n  )\n}\n\nexport default UsersList","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport GlobalStyle from '../global/globalStyle'\nimport LogoSrc from '../assets/images/github-logo.png'\nimport SearchInput from './SearchInput'\nimport UsersList from './UsersList'\n\n\nconst Application = styled.div`\n  text-align: center;\n  font-family: Arnold;\n`;\n\nconst HeaderImage = styled.img`\n  margin: 0 auto;\n`;\n\nconst FooterLink = styled.span`\n  font-size: 8px;\n`;\n\nconst App = () => {\n\n  const [inputValue, setInputValue ] = useState('')\n  const [users, setUsers] = useState([])\n\n  const handleInputChange = (e) =>{\n    setInputValue(e.target.value)\n  }\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault()\n    const url = `https://api.github.com/search/users?q=${inputValue}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(responseJson => setUsers(responseJson.items));\n    \n    setInputValue('')\n  }\n\n  return (\n    <>\n      <GlobalStyle/>\n      <Application>\n        <HeaderImage src={ LogoSrc }/>\n        <SearchInput inputValue={inputValue} onSubmitHandler={onSubmitHandler} handleInputChange={handleInputChange}/>\n        <UsersList users={users}/>\n        <FooterLink>Font made from <a href=\"http://www.onlinewebfonts.com\">oNline Web Fonts</a> is licensed by CC BY 3.0</FooterLink>\n      </Application>\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './components/App';\n\nconst root = createRoot(document.querySelector('#root'))\nroot.render(<App/>)"],"sourceRoot":""}